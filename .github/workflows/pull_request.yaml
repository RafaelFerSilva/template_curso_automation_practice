name: Pull Request CI

on:
  pull_request:
    branches: 
      - main

jobs:
  pull_requests:
    permissions: write-all
    name: PULL REQUESTS TESTS
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout the test repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.17.0'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -U -r requirements.txt
          npx playwright install-deps

      - name: Init Browser Library 
        run: rfbrowser init

      - name: Run the tests
        run: pabot --processes 4 -d ./reports --output output.xml -v HEADLESS:true -v PIPELINE:true --nostatusrc ./tests
      
      - name: Validate Test Coverage
        if: always()
        id: test_coverage
        run: |
          python ./resources/libs/test_coverage_validator.py \a
            ./reports/output.xml \
            --min-coverage 80 \
            --output-dir ./reports/coverage || exit 1

      - name: Read Markdown Report  
        id: read_report
        if: always()
        run: |
          report_file=$(ls ./reports/coverage/test_coverage_report_*.md | head -n 1)
          echo "report_path=$report_file" >> $GITHUB_OUTPUT
          cat $report_file

      - name: Create GitHub Comment
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const reportPath = '${{ steps.read_report.outputs.report_path }}';
            const reportContent = fs.readFileSync(reportPath, 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: reportContent
            });

      - name: Upload PR Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pr-test-results
          path: |
            ./reports
            ./reports/coverage
            ./reports/robotmetrics
          retention-days: 5
          if-no-files-found: ignore
